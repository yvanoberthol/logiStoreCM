{% extends 'base.html.twig' %}
{% block title %}{{ 'adjustment.add.title'|trans({},'messages',app.session.get('_locale')) }}{% endblock %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('dist/plugins/datatables/dataTables.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ asset('dist/plugins/datatables/buttons.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ asset('dist/plugins/datatables/responsive.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ asset('dist/plugins/datatables/dataTables.searchHighlight.css') }}">
    <link rel="stylesheet" href="{{ asset('dist/plugins/select2/dist/css/select2.min.css') }}">
{% endblock %}
{% block javascripts %}
    {%  include 'partials/jsTable.html.twig' %}
    <script src="{{ asset('dist/js/datatable/sb-datatables-nobutton-'~app.session.get('_locale')~'.js') }}"></script>

    <script src="{{ asset('dist/js/formatNumber.js') }}"></script>

    <script src="{{ asset('dist/plugins/select2/dist/js/select2.min.js') }}"></script>
    <script src="{{ asset('dist/plugins/select2/dist/js/i18n/'~app.session.get('_locale')~'.js') }}"></script>
    <script>

        getDataTable($('#dataTable'),true);

        fetch('{{ path('rest_cart_adjustment_get') }}', {
            method: 'GET',
            credentials: 'include',
        }).then( async response => {
            try {
                const data = await response.json();
                $('#cart').html(data.content);

            } catch (reason) {
                console.log(reason);
            }
        }).catch(function (reason) {
            console.log(reason);
        });

        const product = $('#product');
        product.select2({
            placeholder: "{{ 'loss.new.select_product'|trans }}",
            allowClear: true,
            dropdownParent: $('.addModal'),
            language: "{{ app.session.get('_locale') }}"
        });
        product.val([]).trigger('change');


        const body = $('body');

        const thousandSeparator = "{{  app.session.get('setting').currencyThousandSeparator }}";

        body.on('click', '#validLineCart', function (e) {
            e.preventDefault();
            addCart(product.val(),$('#qty').val());
        });

        body.on('click','.removeToCart',function (e) {
            e.preventDefault();
            const productId = $(this).attr('data-product');
            removeToCart(productId);
            e.stopPropagation();
        });

        body.on('click','#removeAllToCart',function (e) {
            e.preventDefault();
            removeAllToCart();
            e.stopPropagation();
        });

        body.on('click','#btnValidate',function (e) {
            e.preventDefault();

            validateCart();
            e.stopPropagation();
        });

        function addCart(id, qty) {
            let data = new FormData();
            data.append( "id", id+'' );
            data.append( "qty", qty+'' );

            fetch('{{ path('rest_cart_adjustment_add') }}', {
                method: 'POST',
                credentials: 'include',
                body: data,
            }).then( async response => {
                try {
                    const data = await response.json();
                    alertify.logPosition("top right");
                    if (data === null){
                        alertify.delay(6000)
                            .error("<i class='fa fa-close'></i> {{ 'adjustment.add.qty_lower'|trans }}");
                    }else{
                        $('#cart').html(data.content);
                    }
                } catch (reason) {
                    console.log(reason);
                }
            }).catch(function (reason) {
                console.log(reason);
            })
        }
        function removeToCart(id) {
            let data = new FormData();
            data.append( "id", id+'' );

            fetch('{{ path('rest_cart_adjustment_remove') }}', {
                method: 'POST',
                credentials: 'include',
                body: data,
            }).then( async response => {
                try {
                    const data = await response.json();

                    $('#cart').html(data.content);

                    return false;
                } catch (reason) {
                    console.log(reason);
                }
            }).catch(function (reason) {
                console.log(reason);
            })
        }
        function removeAllToCart() {

            fetch('{{ path('rest_cart_adjustment_removeAll') }}')
                .then( async response => {
                    try {
                        const data = await response.json();
                        $('#cart').html(data.content);

                        return false;
                    } catch (reason) {
                        console.log(reason);
                    }
                }).catch(function (reason) {
                console.log(reason);
            })
        }
        function validateCart() {
            let data = new FormData();
            data.append("userId", '{{ app.user.id }}');

            fetch('{{ path('rest_cart_adjustment_validate') }}', {
                method: 'POST',
                credentials: 'include',
                body: data,
            }).then( async response => {
                try {
                    const data = await response.json();

                    alertify.logPosition("top right");
                    alertify.delay(6000)
                        .success("<i class='fa fa-check-circle'></i> {{ 'controller.adjustment.add.flash.success'|trans }}");
                    $('#cart').html(data.cart.content);
                    getProducts();

                    return false;
                } catch (reason) {
                    console.log(reason);
                }
            }).catch(function (reason) {
                console.log(reason);
            })
        }

        function getProducts(){
            fetch('{{ path('rest_product') }}', {
                method: 'GET',
                credentials: 'include'
            }).then( async response => {
                try {
                    const data = await response.json();

                    console.log(data);
                    if (data.length > 0){
                        const products = $('#product');
                        products.empty();

                        for(let i=0; i < data.length; i++){
                            products.append('<option value="'+data[i].id+'">'+
                                data[i].nameWithCategory+'&nbsp;('+data[i].stock+')'+
                                '</option>')
                        }
                    }
                } catch (reason) {
                    console.log(reason);
                }
            }).catch(function (reason) {
                console.log(reason);
            })
        }
    </script>

{% endblock %}

{% block body %}

    <div class="row mb-3">
        <div class="col-lg-12 col-md-12 col-sm-12 ml-0">
            <div class="card">
                <div class="card-body">
                    <h4 class="mt-0 header-title text-center">
                        {{ 'adjustment.add.card_title'|trans }}
                        <span class="triangle-border-left pull-left"></span>
                        <span class="triangle-border-right pull-right"></span>
                        <a href="#addModal" id="addToCart"
                           data-toggle="modal"
                           class="btn btn-outline-uyblue pull-right mr-2">
                            <i class="fa fa-plus"></i>
                        </a>
                    </h4>
                    <div id="cart" class="table-responsive"></div>
                </div>
            </div>
        </div>
    </div>
    <!-- add productAdjustment Modal -->
    <div class="modal fade addModal" id="addModal" tabindex="-1" role="dialog"
         aria-labelledby="setStatusModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">
                        {{ 'adjustment.addgui.modal.form.title'|trans }}
                    </h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">Ã—</span>
                    </button>
                </div>
                <form action="" method="post">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="productId">
                                {{ 'adjustment.addgui.modal.form.product'|trans }}
                            </label>
                            <select class="form-control" style="width: 100% !important;"
                                    name="product" id="product" required>
                                {% for product in products  %}
                                    <option value="{{ product.id }}">
                                        {{ product.nameWithCategory }}
                                        &nbsp;({{ product.stock }})
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="qty">
                                {{ 'adjustment.addgui.modal.form.qty'|trans }}
                            </label>
                            <input type="number" class="form-control" id="qty" value="1">
                        </div>
                        <div class="form-group mt-2">
                            <button class="btn btn-uyblue" id="validLineCart">
                                <i class="fa fa-save"></i> &nbsp; {{ 'loss.new.form.btn_save'|trans }}
                            </button>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" type="button" data-dismiss="modal">
                            {{ 'cancel'|trans }}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}
